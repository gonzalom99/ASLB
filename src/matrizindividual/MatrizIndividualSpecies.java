package matrizindividual;

import net.sf.jclec.IConfigure;

import net.sf.jclec.util.intset.IIntegerSet;
import net.sf.jclec.util.intset.Interval;


import org.apache.commons.configuration.Configuration;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

import net.sf.jclec.util.intset.Closure;

/**
 * OrderArrayIndividual species
 * 
 * @author Alberto Cano
 * @author Jose Maria Luna
 * @author Juan Luis Olmo
 * @author Amelia Zafra
 * @author Sebastian Ventura
 */

public class MatrizIndividualSpecies extends AbstractMatrizSpecies implements IConfigure 
{
	/////////////////////////////////////////////////////////////////
	// --------------------------------------- Serialization constant
	/////////////////////////////////////////////////////////////////
	
	/** Generated by Eclipse */
	
	private static final long serialVersionUID = 577795667519852596L;
	
	private int [] duracion;

	/////////////////////////////////////////////////////////////////
	// ------------------------------------------------- Constructors
	/////////////////////////////////////////////////////////////////
	
	/**
	 * Empty constructor
	 */
	
	public MatrizIndividualSpecies() 
	{
		super();
	}

	/**
	 * Constructor that sets genotype schema.
	 * 
	 * @param genotypeSchema Genotype schema
	 */
	
	public MatrizIndividualSpecies(IIntegerSet[][] genotypeSchema) 
	{
		super();
		setGenotypeSchema(genotypeSchema);
	}
	/**
	 * Constructor that sets duracion in genotype schema.
	 * 
	 * @param genotypeSchema Genotype schema
	 */
	public MatrizIndividualSpecies(IIntegerSet[][] genotypeSchema, int [] duracion) 
	{
		super();
		setGenotypeSchema(genotypeSchema);
		setDuracion(duracion);
		
	}
	/////////////////////////////////////////////////////////////////
	// ----------------------------------------------- Public methods
	/////////////////////////////////////////////////////////////////
	
	// Setting properties
	
	/**
	 * Set genotype schema
	 * 
	 * @param genotypeSchema New genotype schema
	 */
	
	public void setGenotypeSchema(IIntegerSet[][] genotypeSchema)
	{
		this.genotypeSchema = genotypeSchema;
	}
	
	// IBinArrayIndividualSpecies interface
	
	/**
	 * {@inheritDoc}
	 */
	
	public MatrizIndividual createIndividual() 
	{
		return new MatrizIndividual();
	}

	/**
	 * {@inheritDoc}
	 */
	
	public MatrizIndividual createIndividual(int[][] genotype) 
	{
		return new MatrizIndividual(genotype);
	}
	
	// IConfigure interface
	
	public void configure(Configuration settings) 
	{
		// Genotype lenght
		int genotypeLength = settings.getInt("[@genotype-length]", 0);
		
		if (genotypeLength != 0) {
			
			// Genotype schema
			IIntegerSet[] genotypeSchema = new IIntegerSet[genotypeLength];
			// Set genotype schema components
			
			for (int i=0; i<genotypeLength; i++) {
				// Set schema component
				Interval integerSet = new Interval();
				integerSet.setLeft(0);
				integerSet.setRight(genotypeLength-1);
				integerSet.setClosure(Closure.ClosedClosed);
				genotypeSchema[i] = integerSet;
				
			}
			
			// Set genotype schema
			//setGenotypeSchema(genotypeSchema);
		}
	}
	public void configure2(Configuration settings) 
	{
		// Genotype lenght: num operaciones x num estaciones
		//cogemos los valores del .cfg
		int num_operaciones = settings.getInt("[@num-estaciones]", 0);
		int num_estaciones = settings.getInt("[@genotype-length]",0);
		int [] duracion = new int [num_operaciones];
		
		if (num_operaciones != 0 && num_estaciones != 0) {
			
			// Genotype schema
			IIntegerSet[][] genotypeSchema = new IIntegerSet[num_operaciones][num_estaciones];
			// Set genotype schema components
			
			
			
			for (int i=0; i<num_operaciones; i++) {
				// Set schema component
				Interval integerSet = new Interval();
				
				integerSet.setLeft(0);
				integerSet.setRight(num_operaciones-1);
				integerSet.setClosure(Closure.ClosedClosed);
				for(int j=0; j<num_estaciones; j++) {
					genotypeSchema[i][j] = integerSet;
				}
				
			}
			//Aqui habria que añadir el array de duracion
			setDuracion(duracion);
			
			// Set genotype schema
			setGenotypeSchema(genotypeSchema);
		}
	}

	// java.lang.Object methods
	
	/**
	 * {@inheritDoc}
	 */
	
	public String toString()
	{
		// Performs Schema rendering
		ToStringBuilder tsb = new ToStringBuilder(this);
		// Append schema
		tsb.append("schema", genotypeSchema);
		// Returns rendered schema
		return tsb.toString();
	}
	
	/**
	 * {@inheritDoc}
	 */
	
	public boolean equals(Object other)
	{
		if (other instanceof MatrizIndividualSpecies) {
			EqualsBuilder eb = new EqualsBuilder();
			MatrizIndividualSpecies iaoth = (MatrizIndividualSpecies) other;
			eb.append(this.genotypeSchema, iaoth.genotypeSchema);
			return eb.isEquals();
		}
		else {
			return false;
		}
	}

	public int [] getDuracion() {
		return duracion;
	}

	public void setDuracion(int [] duracion) {
		this.duracion = duracion;
	}
}
